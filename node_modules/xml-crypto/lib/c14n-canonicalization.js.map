{"version":3,"file":"c14n-canonicalization.js","sourceRoot":"","sources":["../src/c14n-canonicalization.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  NamespacePrefix,\n  RenderedNamespace,\n} from \"./types\";\nimport * as utils from \"./utils\";\nimport * as xpath from \"xpath\";\n\nexport class C14nCanonicalization implements CanonicalizationOrTransformationAlgorithm {\n  includeComments = false;\n\n  attrCompare(a, b) {\n    if (!a.namespaceURI && b.namespaceURI) {\n      return -1;\n    }\n    if (!b.namespaceURI && a.namespaceURI) {\n      return 1;\n    }\n\n    const left = a.namespaceURI + a.localName;\n    const right = b.namespaceURI + b.localName;\n\n    if (left === right) {\n      return 0;\n    } else if (left < right) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n\n  nsCompare(a, b) {\n    const attr1 = a.prefix;\n    const attr2 = b.prefix;\n    if (attr1 === attr2) {\n      return 0;\n    }\n    return attr1.localeCompare(attr2);\n  }\n\n  renderAttrs(node) {\n    let i;\n    let attr;\n    const attrListToRender: Attr[] = [];\n\n    if (xpath.isComment(node)) {\n      return this.renderComment(node);\n    }\n\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n        //ignore namespace definition attributes\n        if (attr.name.indexOf(\"xmlns\") === 0) {\n          continue;\n        }\n        attrListToRender.push(attr);\n      }\n    }\n\n    attrListToRender.sort(this.attrCompare);\n\n    const res = attrListToRender.map((attr) => {\n      return ` ${attr.name}=\"${utils.encodeSpecialCharactersInAttribute(attr.value)}\"`;\n    });\n\n    return res.join(\"\");\n  }\n\n  /**\n   * Create the string of all namespace declarations that should appear on this element\n   *\n   * @param node The node we now render\n   * @param prefixesInScope The prefixes defined on this node parents which are a part of the output set\n   * @param defaultNs The current default namespace\n   * @param defaultNsForPrefix\n   * @param ancestorNamespaces Import ancestor namespaces if it is specified\n   * @api private\n   */\n  renderNs(\n    node: Element,\n    prefixesInScope: string[],\n    defaultNs: string,\n    defaultNsForPrefix: string,\n    ancestorNamespaces: NamespacePrefix[],\n  ): RenderedNamespace {\n    let i;\n    let attr;\n    const res: string[] = [];\n    let newDefaultNs = defaultNs;\n    const nsListToRender: { prefix: string; namespaceURI: string }[] = [];\n    const currNs = node.namespaceURI || \"\";\n\n    //handle the namespace of the node itself\n    if (node.prefix) {\n      if (prefixesInScope.indexOf(node.prefix) === -1) {\n        nsListToRender.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n        prefixesInScope.push(node.prefix);\n      }\n    } else if (defaultNs !== currNs) {\n      //new default ns\n      newDefaultNs = node.namespaceURI || \"\";\n      res.push(' xmlns=\"', newDefaultNs, '\"');\n    }\n\n    //handle the attributes namespace\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n\n        //handle all prefixed attributes that are included in the prefix list and where\n        //the prefix is not defined already. New prefixes can only be defined by `xmlns:`.\n        if (attr.prefix === \"xmlns\" && prefixesInScope.indexOf(attr.localName) === -1) {\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\n          prefixesInScope.push(attr.localName);\n        }\n\n        //handle all prefixed attributes that are not xmlns definitions and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          prefixesInScope.indexOf(attr.prefix) === -1 &&\n          attr.prefix !== \"xmlns\" &&\n          attr.prefix !== \"xml\"\n        ) {\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n          prefixesInScope.push(attr.prefix);\n        }\n      }\n    }\n\n    if (utils.isArrayHasLength(ancestorNamespaces)) {\n      // Remove namespaces which are already present in nsListToRender\n      for (const ancestorNamespace of ancestorNamespaces) {\n        let alreadyListed = false;\n        for (const nsToRender of nsListToRender) {\n          if (\n            nsToRender.prefix === ancestorNamespace.prefix &&\n            nsToRender.namespaceURI === ancestorNamespace.namespaceURI\n          ) {\n            alreadyListed = true;\n          }\n        }\n\n        if (!alreadyListed) {\n          nsListToRender.push(ancestorNamespace);\n        }\n      }\n    }\n\n    nsListToRender.sort(this.nsCompare);\n\n    //render namespaces\n    res.push(\n      ...nsListToRender.map((attr) => {\n        if (attr.prefix) {\n          return ` xmlns:${attr.prefix}=\"${attr.namespaceURI}\"`;\n        }\n        return ` xmlns=\"${attr.namespaceURI}\"`;\n      }),\n    );\n\n    return { rendered: res.join(\"\"), newDefaultNs };\n  }\n\n  processInner(node, prefixesInScope, defaultNs, defaultNsForPrefix, ancestorNamespaces) {\n    if (xpath.isComment(node)) {\n      return this.renderComment(node);\n    }\n    if (node.data) {\n      return utils.encodeSpecialCharactersInText(node.data);\n    }\n\n    let i;\n    let pfxCopy;\n    const ns = this.renderNs(\n      node,\n      prefixesInScope,\n      defaultNs,\n      defaultNsForPrefix,\n      ancestorNamespaces,\n    );\n    const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\n\n    for (i = 0; i < node.childNodes.length; ++i) {\n      pfxCopy = prefixesInScope.slice(0);\n      res.push(\n        this.processInner(node.childNodes[i], pfxCopy, ns.newDefaultNs, defaultNsForPrefix, []),\n      );\n    }\n\n    res.push(\"</\", node.tagName, \">\");\n    return res.join(\"\");\n  }\n\n  // Thanks to deoxxa/xml-c14n for comment renderer\n  renderComment(node: Comment) {\n    if (!this.includeComments) {\n      return \"\";\n    }\n\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\n    let isBeforeDocument = false;\n    let isAfterDocument = false;\n\n    if (isOutsideDocument) {\n      let nextNode: ChildNode | null = node;\n      let previousNode: ChildNode | null = node;\n\n      while (nextNode !== null) {\n        if (nextNode === node.ownerDocument.documentElement) {\n          isBeforeDocument = true;\n          break;\n        }\n\n        nextNode = nextNode.nextSibling;\n      }\n\n      while (previousNode !== null) {\n        if (previousNode === node.ownerDocument.documentElement) {\n          isAfterDocument = true;\n          break;\n        }\n\n        previousNode = previousNode.previousSibling;\n      }\n    }\n\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\n\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\n  }\n\n  /**\n   * Perform canonicalization of the given node\n   *\n   * @param {Node} node\n   * @return {String}\n   * @api public\n   */\n  process(node: Node, options: CanonicalizationOrTransformationAlgorithmProcessOptions) {\n    options = options || {};\n    const defaultNs = options.defaultNs || \"\";\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\n    const ancestorNamespaces = options.ancestorNamespaces || [];\n\n    const prefixesInScope: string[] = [];\n    for (let i = 0; i < ancestorNamespaces.length; i++) {\n      prefixesInScope.push(ancestorNamespaces[i].prefix);\n    }\n\n    const res = this.processInner(\n      node,\n      prefixesInScope,\n      defaultNs,\n      defaultNsForPrefix,\n      ancestorNamespaces,\n    );\n    return res;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\";\n  }\n}\n\n/**\n * Add c14n#WithComments here (very simple subclass)\n */\nexport class C14nCanonicalizationWithComments extends C14nCanonicalization {\n  constructor() {\n    super();\n    this.includeComments = true;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\";\n  }\n}\n"]}