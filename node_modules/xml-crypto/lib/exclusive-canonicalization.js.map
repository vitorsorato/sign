{"version":3,"file":"exclusive-canonicalization.js","sourceRoot":"","sources":["../src/exclusive-canonicalization.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  NamespacePrefix,\n} from \"./types\";\nimport * as utils from \"./utils\";\nimport * as xpath from \"xpath\";\n\nfunction isPrefixInScope(prefixesInScope, prefix, namespaceURI) {\n  let ret = false;\n  prefixesInScope.forEach(function (pf) {\n    if (pf.prefix === prefix && pf.namespaceURI === namespaceURI) {\n      ret = true;\n    }\n  });\n\n  return ret;\n}\n\nexport class ExclusiveCanonicalization implements CanonicalizationOrTransformationAlgorithm {\n  includeComments = false;\n\n  attrCompare(a, b) {\n    if (!a.namespaceURI && b.namespaceURI) {\n      return -1;\n    }\n    if (!b.namespaceURI && a.namespaceURI) {\n      return 1;\n    }\n\n    const left = a.namespaceURI + a.localName;\n    const right = b.namespaceURI + b.localName;\n\n    if (left === right) {\n      return 0;\n    } else if (left < right) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n\n  nsCompare(a, b) {\n    const attr1 = a.prefix;\n    const attr2 = b.prefix;\n    if (attr1 === attr2) {\n      return 0;\n    }\n    return attr1.localeCompare(attr2);\n  }\n\n  renderAttrs(node) {\n    let i;\n    let attr;\n    const res: string[] = [];\n    const attrListToRender: Attr[] = [];\n\n    if (xpath.isComment(node)) {\n      return this.renderComment(node);\n    }\n\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n        //ignore namespace definition attributes\n        if (attr.name.indexOf(\"xmlns\") === 0) {\n          continue;\n        }\n        attrListToRender.push(attr);\n      }\n    }\n\n    attrListToRender.sort(this.attrCompare);\n\n    for (attr of attrListToRender) {\n      res.push(\" \", attr.name, '=\"', utils.encodeSpecialCharactersInAttribute(attr.value), '\"');\n    }\n\n    return res.join(\"\");\n  }\n\n  /**\n   * Create the string of all namespace declarations that should appear on this element\n   *\n   * @param {Node} node. The node we now render\n   * @param {Array} prefixesInScope. The prefixes defined on this node\n   *                parents which are a part of the output set\n   * @param {String} defaultNs. The current default namespace\n   * @return {String}\n   * @api private\n   */\n  renderNs(\n    node,\n    prefixesInScope,\n    defaultNs,\n    defaultNsForPrefix,\n    inclusiveNamespacesPrefixList: string[],\n  ) {\n    let i;\n    let attr;\n    const res: string[] = [];\n    let newDefaultNs = defaultNs;\n    const nsListToRender: NamespacePrefix[] = [];\n    const currNs = node.namespaceURI || \"\";\n\n    //handle the namespaceof the node itself\n    if (node.prefix) {\n      if (\n        !isPrefixInScope(\n          prefixesInScope,\n          node.prefix,\n          node.namespaceURI || defaultNsForPrefix[node.prefix],\n        )\n      ) {\n        nsListToRender.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n        prefixesInScope.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n      }\n    } else if (defaultNs !== currNs) {\n      //new default ns\n      newDefaultNs = node.namespaceURI;\n      res.push(' xmlns=\"', newDefaultNs, '\"');\n    }\n\n    //handle the attributes namespace\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n\n        //handle all prefixed attributes that are included in the prefix list and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          !isPrefixInScope(prefixesInScope, attr.localName, attr.value) &&\n          inclusiveNamespacesPrefixList.indexOf(attr.localName) >= 0\n        ) {\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\n          prefixesInScope.push({ prefix: attr.localName, namespaceURI: attr.value });\n        }\n\n        //handle all prefixed attributes that are not xmlns definitions and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          !isPrefixInScope(prefixesInScope, attr.prefix, attr.namespaceURI) &&\n          attr.prefix !== \"xmlns\" &&\n          attr.prefix !== \"xml\"\n        ) {\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n          prefixesInScope.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n        }\n      }\n    }\n\n    nsListToRender.sort(this.nsCompare);\n\n    //render namespaces\n    for (const p of nsListToRender) {\n      res.push(\" xmlns:\", p.prefix, '=\"', p.namespaceURI, '\"');\n    }\n\n    return { rendered: res.join(\"\"), newDefaultNs: newDefaultNs };\n  }\n\n  processInner(\n    node,\n    prefixesInScope,\n    defaultNs,\n    defaultNsForPrefix,\n    inclusiveNamespacesPrefixList: string[],\n  ) {\n    if (xpath.isComment(node)) {\n      return this.renderComment(node);\n    }\n    if (node.data) {\n      return utils.encodeSpecialCharactersInText(node.data);\n    }\n\n    let i;\n    let pfxCopy;\n    const ns = this.renderNs(\n      node,\n      prefixesInScope,\n      defaultNs,\n      defaultNsForPrefix,\n      inclusiveNamespacesPrefixList,\n    );\n    const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\n\n    for (i = 0; i < node.childNodes.length; ++i) {\n      pfxCopy = prefixesInScope.slice(0);\n      res.push(\n        this.processInner(\n          node.childNodes[i],\n          pfxCopy,\n          ns.newDefaultNs,\n          defaultNsForPrefix,\n          inclusiveNamespacesPrefixList,\n        ),\n      );\n    }\n\n    res.push(\"</\", node.tagName, \">\");\n    return res.join(\"\");\n  }\n\n  // Thanks to deoxxa/xml-c14n for comment renderer\n  renderComment(node: Comment) {\n    if (!this.includeComments) {\n      return \"\";\n    }\n\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\n    let isBeforeDocument = false;\n    let isAfterDocument = false;\n\n    if (isOutsideDocument) {\n      let nextNode: ChildNode | null = node;\n      let previousNode: ChildNode | null = node;\n\n      while (nextNode != null) {\n        if (nextNode === node.ownerDocument.documentElement) {\n          isBeforeDocument = true;\n          break;\n        }\n\n        nextNode = nextNode.nextSibling;\n      }\n\n      while (previousNode != null) {\n        if (previousNode === node.ownerDocument.documentElement) {\n          isAfterDocument = true;\n          break;\n        }\n\n        previousNode = previousNode.previousSibling;\n      }\n    }\n\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\n\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\n  }\n\n  /**\n   * Perform canonicalization of the given node\n   *\n   * @param {Node} node\n   * @return {String}\n   * @api public\n   */\n  process(node, options: CanonicalizationOrTransformationAlgorithmProcessOptions) {\n    options = options || {};\n    let inclusiveNamespacesPrefixList = options.inclusiveNamespacesPrefixList || [];\n    const defaultNs = options.defaultNs || \"\";\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\n    const ancestorNamespaces = options.ancestorNamespaces || [];\n\n    /**\n     * If the inclusiveNamespacesPrefixList has not been explicitly provided then look it up in CanonicalizationMethod/InclusiveNamespaces\n     */\n    if (!utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\n      const CanonicalizationMethod = utils.findChildren(node, \"CanonicalizationMethod\");\n      if (CanonicalizationMethod.length !== 0) {\n        const inclusiveNamespaces = utils.findChildren(\n          CanonicalizationMethod[0],\n          \"InclusiveNamespaces\",\n        );\n        if (inclusiveNamespaces.length !== 0) {\n          inclusiveNamespacesPrefixList = (\n            inclusiveNamespaces[0].getAttribute(\"PrefixList\") || \"\"\n          ).split(\" \");\n        }\n      }\n    }\n\n    /**\n     * If you have a PrefixList then use it and the ancestors to add the necessary namespaces\n     */\n    if (utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\n      inclusiveNamespacesPrefixList.forEach(function (prefix) {\n        if (ancestorNamespaces) {\n          ancestorNamespaces.forEach(function (ancestorNamespace) {\n            if (prefix === ancestorNamespace.prefix) {\n              node.setAttributeNS(\n                \"http://www.w3.org/2000/xmlns/\",\n                `xmlns:${prefix}`,\n                ancestorNamespace.namespaceURI,\n              );\n            }\n          });\n        }\n      });\n    }\n\n    const res = this.processInner(\n      node,\n      [],\n      defaultNs,\n      defaultNsForPrefix,\n      inclusiveNamespacesPrefixList,\n    );\n    return res;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#\";\n  }\n}\n\nexport class ExclusiveCanonicalizationWithComments extends ExclusiveCanonicalization {\n  constructor() {\n    super();\n    this.includeComments = true;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\";\n  }\n}\n"]}